Data Sciecne


Introduction


Python Practice 2.2 - Vaccinations Report
#calculate avg vaccination status from the data

vac_nums = [0,0,0,0,0,
            1,1,1,1,1,1,1,1,
            2,2,2,2,
            3,3,3
            ]

total = sum(vac_nums)

avg = total / len(vac_nums)

print(avg)


Python Practice 3.2 - Vaccinations Dataset
#calculate variance from the same dataset

vac_nums = [0,0,0,0,0,
            1,1,1,1,1,1,1,1,
            2,2,2,2,
            3,3,3
            ]
import numpy as np

vaccines = np.array(vac_nums)
mean = np.sum(vaccines)/vaccines.size

print(np.sum((vaccines-mean)**2)/vaccines.size)


Code Project 5 - Basketball Players
#find all players within 1 std

players = [180, 172, 178, 185, 190, 195, 192, 200, 210, 190]

mean = sum(players)/len(players)
stdvar = (sum((v-mean)**2 for v in players)/len(players))**0.5

low, high = mean-stdvar,mean+stdvar

count = len([v for v in players if low < v < high])

print(count)
///////////////////////////////////////////////////////////////////


Math Operations With Numpy


Python Practice 7.2 - Houses On The Block
#append sqft of a house to an existing list

import numpy as np
data = np.array([1000, 2500, 1400, 1800, 900, 4200, 2200, 1900, 3500])
newby = int(input())
data = np.append(data, newby)
print(np.sort(data))

Python Practice 8.2 - Take Your Seat
#organize a list into an array that matches the theatre layout
import numpy as np
data = np.array([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0])
row = int(input())
data = data.reshape(6,5)
print(data[row])


Python Practice 9.2 - Array Of Numbers
#find all whole nums that are multiples of 3 & 5

import numpy as np
n = np.arange(1,100)
print(n[(n%3==0) & (n%5==0)])


Python Practice 10.2 - Infection Cases
#find the number of days that exceed avg

import numpy as np
data = np.array([120, 98, 150, 65, 42, 100, 190, 220, 140, 110, 88, 89, 100, 120, 50, 180, 155, 42, 89, 77, 200, 190, 125, 98, 77, 40, 39, 59, 30, 67])
avg = np.mean(data)
count = 0

for n in data:
    if n > avg:
        count+=1
print(count)


Code Project 12 - House Prices
#find all house prices within 1 std

import numpy as np
data = np.array([150000, 125000, 320000, 540000, 200000, 120000, 160000, 230000, 280000, 290000, 300000, 500000, 420000, 100000, 150000, 280000])

# find std dev
mean = np.mean(data)
dev = np.std(data)
count = 0

# find  range of std
low = mean-dev
high = mean+dev

# find percentage
for p in data:
    if low < p < high:
        count += 1

percent = (count/len(data)) * 100       
print(percent)
//////////////////////////////////////////////////////////////////


Data Manipulations With Pandas

Python Practice 14.2 - Contacts List
#add an index to the dictionary through DF

import pandas as pd
data = {
   'name': ['James', 'Billy', 'Bob', 'Amy', 'Tom'],
   'number': ['1234', '5678', '2222', '1111', '0909']
}

df = pd.DataFrame(data, index=['James', 'Billy', 'Bob','Amy', 'Tom'])
name = input()
print(df.loc[name])


Python Practice 15.2 - Names And Ranks
#find the name through the person's rank

import pandas as pd
data = {
   'name': ['James', 'Billy', 'Bob', 'Amy', 'Tom', 'Harry'],
   'rank': [4, 1, 3, 5, 2, 6]
}

df = pd.DataFrame(data, index=data['name'])
rank = int(input())
print(df['name'][df['rank'] == rank])


Python Practice 16.2 - Cases And Deaths
#find the row for 2020-12-31

import pandas as pd
df = pd.read_csv("/usercode/files/ca-covid.csv")
df.set_index('date', inplace=True)
df.drop('state', axis=1, inplace=True)
print(df.iloc[-1])


Python Practice 17.2 - Day Of The Week
#add weekday names, then print the last 7 days

import pandas as pd

df = pd.read_csv("/usercode/files/ca-covid.csv")

df.drop('state', axis=1, inplace=True)
df['date'] = pd.to_datetime(df['date'], format="%d.%m.%y")

df['weekday'] = df['date'].dt.strftime('%A')

print(df[-7:])


Python Practice 18.2 - Number Of Cases
#find the day with max cases in a given month

import pandas as pd

df = pd.read_csv("/usercode/files/ca-covid.csv")
df.drop('state', axis=1, inplace=True)
df['date'] = pd.to_datetime(df['date'], format="%d.%m.%y")
df['month'] = df['date'].dt.month_name()
df.set_index('date', inplace=True)

target_month = input()
maximum = df[df['month'] == target_month] ['cases'].max()
print(df[df['cases'] == maximum])


Code Project 20 - COVID Data Analysis
#find the largest deaths/cases ratio

import pandas as pd
df = pd.read_csv("/usercode/files/ca-covid.csv")
df.drop('state', axis=1, inplace=True)
df.set_index('date', inplace=True)

#calculate ratio
df['ratio'] = df['deaths'] / df['cases']

# max ratio
df = df[df['ratio'] == df['ratio'].max()]
print(df)
///////////////////////////////////////////////////////////////////


Visualizations With Matplotlip

No practice coding in this section
